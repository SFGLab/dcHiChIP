/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}/${meta.type}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }


    withName: FILTER_QUALITY {
        //cpus   = { check_max( params.fastqsplitter_cpus    * task.attempt, 'cpus' ) }
        //memory = { check_max(  ( params.fastqsplitter_memory as nextflow.util.MemoryUnit) * task.attempt, 'memory' ) }
        //time = { check_max(  ( params.fastqsplitter_walltime  as nextflow.util.Duration) * task.attempt, 'time' ) }
        ext.args = { params.filter_quality_args == null ? " -F 0x04 -q ${params.mapq} " : params.filter_quality_args}
        ext.prefix = "filtered"
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}/${meta.type}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}_${filename}" }
        ]
    }

    withName: BWA_MEM {
        ext.args = { params.bwa_mem_args == null ? " -M -v 0  " : params.bwa_mem_args}
        ext.args2 = { params.bwa_mem_samtools_args == null ? " -bh " : params.bwa_mem_samtools_args}
    }
    withName: REMOVE_DUPLICATES {
        ext.args = { params.remove_duplicates_args == null ? "-n" : params.remove_duplicates_args}
    }

    withName: MACS3_CALLPEAK {
        ext.args = { params.macs3_callpeak_args == null ? "--nomodel -q ${params.peak_quality} -B --format BAMPE" : params.macs3_callpeak_args}
    }

    withName: MAPS {
        ext.args = { params.maps_args == null ? "-n 1 -a ${params.mapq}" : params.maps_args}
    }

    withName: JUICERTOOLS {
        ext.args = { params.juicertools_args == null ? "${params.ref_short}" : params.juicertools_args}
    }

    withName: DEEPTOOLS_PLOTCOVERAGE {
        ext.args = { params.deeptools_plotcoverage_args == null ? "--skipZeros" : params.deeptools_plotcoverage_args}
    }

    withName: GSTRIPE {
        ext.args = { params.gstripe_args == null ? "--fix_bin_start" : params.gstripe_args}
    }

    withName: DEEPTOOLS_PLOTCORRELATION {
        ext.args = { params.deeptools_plotcorrelation_args == null ? "--skipZeros --plotTitle \"Spearman Correlation of Read Counts\"  --colorMap RdYlBu --plotNumbers" : params.deeptools_plotcorrelation_args}
    }
    withName: PAIRTOOLS_PARSE2 {
        ext.args = { params.pairtools_parse2_args == null ? "--drop-sam --drop-seq --assembly ${params.ref_short} --no-flip" : params.pairtools_parse2_args}
        
    }
    
    withName: COOLER_CLOAD {
        ext.args = { params.cooler_cload_args == null ? "pairs --zero-based  -c1 2 -p1 3 -c2 4 -p2 5" : params.cooler_cload_args}
    }

    withName: COOLER_ZOOMIFY {
        ext.args = { params.cooler_zoomify_args == null ? " -r ${params.cooler_zoomify_res} --balance --balance-args '--cis-only --mad-max 5' " : params.cooler_zoomify_args}
    }
    
    withName: COOLTOOLS_EIGSCIS {
        ext.args = { params.cooltools_eigscis_args == null ? "--n-eigs 1" : params.cooltools_eigscis_args}
    }

    withName: MULTIMM {
        def args_val = " --platform ${params.multimm_platform} --modelling_level ${params.multimm_modelling_level} "
        
        if ("${params.multimm_modelling_level}".toLowerCase() == "gene"){
            args_val = "${args_val} --gene_name ${params.multimm_gene_name}"
        }else{
            if (["region", "chrom"].contains("${params.multimm_modelling_level}".toLowerCase())){
                args_val = "${args_val} --chrom ${params.multimm_chrom}"
            }
            if (["region"].contains("${params.multimm_modelling_level}".toLowerCase())){
                args_val = "${args_val} --loc_start ${params.multimm_loc_start} --loc_end ${params.multimm_loc_end}"
            }
        }
        ext.args = { params.multimm_args == null ? "${args_val}" : params.multimm_args}
    }
    
    withName: "BWA_MEM_SE_R1|BWA_MEM_SE_R2" {
        ext.args = { params.se_bwa_mem_args == null ? " " : params.se_bwa_mem_args}
        ext.args2 = { params.se_samtools_args == null ? " -n " : params.se_samtools_args}
    }
    
    withName: SAMTOOLS_FIXMATE {
        ext.args = { params.samtools_fixmate_args == null ? " -m " : params.samtools_fixmate_args}
    }
    withName: FILTER_PAIRES {
        ext.args = { params.filter_paires_args == null ? "--mapq ${params.mapq}" : params.filter_paires_args}
    }
    withName: SAMTOOLS_MARKDUP {
        ext.args = { params.samtools_markdup_args == null ? "-r -m s -s -f fixmated.markdup.stats -d ${params.optical_duplicate_distance}" : params.samtools_markdup_args}
    }
    withName: SAMTOOLS_SORT_2 {
        ext.args = { params.samtools_sort_2_args == null ? "-n" : params.samtools_sort_2_args}
    }
    withName: SAMTOOLS_MARKDUP {
        ext.prefix = "markdup"
    }
}
