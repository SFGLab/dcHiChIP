/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }


    withName: FILTER_QUALITY {
        //cpus   = { check_max( params.fastqsplitter_cpus    * task.attempt, 'cpus' ) }
        //memory = { check_max(  ( params.fastqsplitter_memory as nextflow.util.MemoryUnit) * task.attempt, 'memory' ) }
        //time = { check_max(  ( params.fastqsplitter_walltime  as nextflow.util.Duration) * task.attempt, 'time' ) }
        ext.args = { params.filter_quality_args == null ? " -F 0x04 -q ${params.mapq} " : params.filter_quality_args}
        ext.prefix = "filtered"
 
    }

    withName: BWA_MEM {
        ext.args = { params.bwa_mem_args == null ? " -M -v 0  " : params.bwa_mem_args}
        ext.args2 = { params.bwa_mem_samtools_args == null ? " -bh " : params.bwa_mem_samtools_args} 
    }
    withName: REMOVE_DUPLICATES {
        ext.args = " -n "
    }

}
