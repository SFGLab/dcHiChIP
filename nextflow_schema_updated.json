{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "dcHiChIP Pipeline Parameters",
    "description": "Schema definition for dcHiChIP Nextflow pipeline parameters",
    "type": "object",
    "definitions": {
        "general": {
            "title": "General Options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "General pipeline execution options (output, resources, etc.)",
            "properties": {
                "ref_short": {
                    "type": "string",
                    "title": "Reference Genome Short Name",
                    "description": "A short identifier for the reference genome build used in the workflow. This is mainly used for labeling outputs and maintaining consistency across pipeline steps. Typical values are `hg38` (human) or `mm10` (mouse).",
                    "help_text": "Choose a short, standard genome code matching your input reference (e.g., `hg38`, `mm10`). It should correspond to the genome files (FASTA, GTF, chrom sizes) you provide.",
                    "fa_icon": "far fa-file-code",
                    "default": "hg38"},
                "outdir": {
                   "type": "string",
                   "title": "Output Directory",
                   "description": "Path to the main output directory where all pipeline results, logs, and intermediate files will be stored.",
                   "help_text": "Provide either a relative or absolute path. The directory will be created automatically if it does not exist. Example: `--outdir /data/dcHiChIP_results`.",
                   "fa_icon": "far fa-folder-open",
                   "default": "results"},
                "threads": {
                    "type": "integer",
                    "title": "Number of CPU Threads",
                    "description": "Specifies the default number of CPU threads to allocate for each process, unless a specific module overrides it.",
                    "help_text": "Use this to control parallel execution and optimize runtime based on available cores. Example: `--threads 16` for a 16-core machine. Increasing threads improves speed but also increases memory usage.",
                    "fa_icon": "fas fa-microchip",
                    "default": 8},
                "mem": {
                   "type": "integer",
                   "title": "Memory Allocation (GB)",
                   "description": "Specifies the default amount of memory (in gigabytes) to allocate per process, unless overridden by module-specific settings.",
                   "help_text": "Set this according to the available system memory and dataset size. For example, `--mem 16` allocates 16 GB per task. Insufficient memory may cause process failures on large datasets.",
                   "fa_icon": "fas fa-memory",
                   "default": 4}
            }
        },
        "mapping_filtering": {
            "title": "Alignment & Filtering",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Configuration options for read alignment, mapping quality filtering, duplicate removal, and sorting. These parameters control how raw HiChIP reads are aligned to the reference genome and preprocessed before downstream analyses.",
            "help_text": "Adjust these settings to balance mapping stringency, computational cost, and data quality. For example, lowering the mapping quality (`mapq`) may include more reads but increase background noise, while increasing it improves precision.",
            "properties": {
                "mapq": {
                    "type": "integer",
                    "title": "Minimum Mapping Quality (MAPQ)",
                    "description": "Sets the minimum MAPQ threshold for retaining aligned reads. Reads with mapping quality below this value are filtered out before downstream analysis.",
                    "help_text": "Use higher MAPQ values (e.g., 30) to include only confidently aligned reads and reduce background noise. Lower values may retain more reads but can increase false positives. Typical range: 10–60.",
                    "fa_icon": "fas fa-filter",
                    "default": 30},
                "se_samtools_args": {
                    "type": "string",
                    "title": "SAMtools Arguments (Single-End)",
                    "description": "Custom command-line flags passed to SAMtools when processing single-end read alignments.",
                    "help_text": "Use this to fine-tune how SAMtools handles single-end BAM/SAM files — for example, adjusting compression, threading, or output format. Example: `--se_samtools_args \"-@ 8 -bh\"`. Leave empty (`null`) to use default SAMtools behavior.",
                    "fa_icon": "fas fa-terminal",
                    "default": null},
                "se_bwa_mem_args": {
                    "type": "string",
                    "title": "BWA-MEM Arguments (Single-End)",
                    "description": "Additional command-line parameters for BWA-MEM when aligning single-end reads.",
                    "help_text": "Use this to customize BWA-MEM behavior for single-end reads — for example, seed length (`-k`), mismatch penalties, or output verbosity. Example: `--se_bwa_mem_args \"-k 19 -B 4 -O 6,6 -E 1,1\"`. Leave empty (`null`) to use default alignment settings.",
                    "fa_icon": "fas fa-dna",
                    "default": null},
                "bwa_mem_args": {
                    "type": "string",
                    "title": "BWA-MEM Arguments (Paired-End)",
                    "description": "Custom command-line options for the BWA-MEM aligner used for paired-end read mapping.",
                    "help_text": "Use this to modify BWA-MEM parameters such as alignment scoring, read group tagging, or reporting options. The default `-M -v 0` marks shorter split hits as secondary and suppresses verbose output. Example: `--bwa_mem_args \"-M -K 100000000 -Y -R '@RG\\tID:sample\\tSM:sample'\"`.",
                    "fa_icon": "fas fa-dna",
                    "default": "-M -v 0"},
                "samtools_fixmate_args": {
                    "type": "string",
                    "title": "SAMtools Fixmate Arguments",
                    "description": "Specifies additional command-line options for the `samtools fixmate` command, which ensures that read-pair information is consistent in the alignment file.",
                    "help_text": "The default `-m` option marks missing mate reads and adds mate coordinate information to each read pair. Adjust this if you need to control how mate tags or secondary alignments are handled. Example: `--samtools_fixmate_args \"-m -O bam\"`.",
                    "fa_icon": "fas fa-tools",
                    "default": "-m"},
                "remove_duplicates_args": {
                    "type": "string",
                    "title": "Duplicate Removal Arguments",
                    "description": "Specifies custom command-line flags for the duplicate removal step, controlling how PCR or optical duplicates are identified and filtered.",
                    "help_text": "The default `-n` flag skips duplicate removal but still counts duplicates for statistics. Modify this if you want to fully remove duplicates or change behavior depending on your data. Example: `--remove_duplicates_args \"-n --stats dupstats.txt\"`.",
                    "fa_icon": "fas fa-clone",
                    "default": "-n"},
                "filter_quality_args": {
                    "type": "string",
                    "title": "Read Quality Filtering Arguments",
                    "description": "Additional command-line options for filtering reads based on mapping or sequence quality before downstream analysis.",
                    "help_text": "Use this to apply extra filtering thresholds beyond MAPQ, such as minimum alignment length or mismatch rate. Leave empty (`null`) to use default filtering behavior. Example: `--filter_quality_args \"--min-MAPQ 10 --min-len 30\"`.",
                    "fa_icon": "fas fa-filter",
                    "default": null},
                "filter_paires_args": {
                    "type": "string",
                    "title": "Pair Filtering Arguments",
                    "description": "Custom options for filtering valid read pairs based on distance, orientation, or pairing criteria during HiChIP read preprocessing.",
                    "help_text": "Use this to refine which read pairs are retained for contact map generation. For example, you can exclude pairs beyond a distance threshold or with invalid orientations. Example: `--filter_paires_args \"--max-dist 2000 --min-dist 100\"`. Leave empty (`null`) to keep default pair filtering behavior.",
                    "fa_icon": "fas fa-exchange-alt",
                    "default": null},
                "samtools_markdup_args": {
                    "type": "string",
                    "title": "SAMtools Markdup Arguments",
                    "description": "Specifies additional options for the `samtools markdup` command, which marks or removes duplicate reads in BAM files.",
                    "help_text": "Use this to control duplicate marking behavior, threading, or reporting options. For example, adding `-r` removes duplicates instead of marking them, and `-@ 8` sets the number of threads. Example: `--samtools_markdup_args \"-r -@ 8\"`. Leave empty (`null`) to use SAMtools default settings.",
                    "fa_icon": "fas fa-tags",
                    "default": null},
                "samtools_sort_2_args": {
                    "type": "string",
                    "title": "SAMtools Sort (Second Pass) Arguments",
                    "description": "Specifies additional parameters for the second sorting step performed by `samtools sort`, typically used for name-sorting or coordinate-sorting read pairs.",
                    "help_text": "The default `-n` flag sorts alignments by read name, which is often required for pairwise operations. You can modify this to coordinate-sort (`-o`) or add threading options. Example: `--samtools_sort_2_args \"-@ 8 -T tmp -o sorted.bam\"`.",
                    "fa_icon": "fas fa-sort-amount-down",
                    "default": "-n"}
            }
        },
        "references": {
            "title": "Reference & Annotation",
            "type": "object",
            "fa_icon": "fas fa-book",
            "description": "Configuration for reference genome files and annotation resources used throughout the pipeline. These parameters ensure consistent genome build usage across mapping, feature annotation, and downstream analyses.",
            "help_text": "Provide correct and consistent genome resources (FASTA index, GTF, chromosome sizes, and blacklist) matching your chosen reference build (e.g., hg38, mm10). Mismatched files can lead to coordinate errors or missing annotations.",
            "properties": {
                "jaspar_motif": {
                    "type": "string",
                    "title": "JASPAR Motif File (TSV)",
                    "description": "Specifies the URL or local path to the JASPAR motif file (TSV format) used for motif scanning and peak annotation — typically representing transcription factor binding motifs such as CTCF.",
                    "help_text": "Provide the path or direct download link to a JASPAR motif file compatible with your reference genome. The default points to the CTCF motif (MA0139.1) for hg38. Example: `--jaspar_motif https://jaspar.elixir.no/downloads/MA0139.1.tsv.gz`.",
                    "fa_icon": "fas fa-fingerprint",
                    "default": "http://expdata.cmmt.ubc.ca/JASPAR/downloads/UCSC_tracks/2022/hg38/MA0139.1.tsv.gz"},
                "blacklist": {
                    "type": "string",
                    "title": "ENCODE Blacklist Regions (BED)",
                    "description": "Path or URL to a BED file containing ENCODE blacklist regions that should be excluded from peak calling, loop detection, and coverage calculations. These regions are known to produce artificially high signal or mapping artifacts.",
                    "help_text": "Use the appropriate blacklist file for your genome build (e.g., hg19, hg38, mm10). The default points to the ENCODE hg38 blacklist (`ENCFF356LFX`). Example: `--blacklist /refs/hg38-blacklist.bed.gz`.",
                    "fa_icon": "fas fa-ban",
                    "default": "https://www.encodeproject.org/files/ENCFF356LFX/@@download/ENCFF356LFX.bed.gz"},
                "gtf": {
                    "type": "string",
                    "title": "Gene Annotation File (GTF)",
                    "description": "Specifies the path or URL to the GTF file containing gene annotations for the reference genome. This file is used to assign peaks, loops, and other genomic features to known genes and transcripts.",
                    "help_text": "Provide a GTF file compatible with your chosen reference genome (e.g., Ensembl or GENCODE format). The default points to the GRCh38 annotation from the Illumina iGenomes collection. Example: `--gtf /data/genomes/GRCh38/genes.gtf`.",
                    "fa_icon": "fas fa-scroll",
                    "default": "s3://ngi-igenomes/igenomes/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.gtf"
                },
                "chrom_size": {
                    "type": "string",
                    "title": "Chromosome Sizes File",
                    "description": "Path to a two-column file listing chromosome names and their corresponding lengths, used to define genomic bounds during binning and matrix construction.",
                    "help_text": "This file ensures that cooler and related modules apply consistent chromosome boundaries. It must match the same reference genome build as the input FASTA and GTF files. Example: `--chrom_size /refs/hg38.chrom.sizes`.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": "$projectDir/assets/hg38.chrom.sizes"},
                "genomics_features": {
                    "type": "string",
                    "title": "Genomic Features File (MAPS)",
                    "description": "Specifies the path or URL to the genomic features file required by MAPS for loop calling. This file contains mappability, GC content, and restriction enzyme fragment information used for bias correction.",
                    "help_text": "Use the appropriate MAPS genomic features file matching your genome build and restriction enzyme (e.g., MboI or DpnII). The default points to the hg38 MboI 10 kb resolution file. Example: `--genomics_features /refs/MAPS_features_hg38_MboI_10kb.txt`.",
                    "fa_icon": "fas fa-dna",
                    "default": "https://raw.githubusercontent.com/HuMingLab/MAPS/refs/heads/master/MAPS_data_files/hg38/genomic_features/F_GC_M_MboI_10Kb_el.GRCh38.txt"}
            }
        },
        "peaks_loops": {
            "title": "Peaks & Loops",
            "type": "object",
            "fa_icon": "fas fa-project-diagram",
            "description": "Configuration of parameters related to peak calling and chromatin loop detection. These settings control how enriched regions (peaks) and chromatin interactions (loops) are identified from HiChIP data.",
            "help_text": "Adjust these options to fine-tune sensitivity and specificity in peak and loop detection. For example, you can modify the p-value threshold for MACS3 or enable MAPS loop calling for specific experimental setups.",
            "properties": {
                "peak_quality": {
                    "type": "number",
                    "title": "Peak Significance Threshold",
                    "description": "Sets the significance cutoff (p-value or q-value, depending on MACS3 configuration) for peak calling to identify enriched regions.",
                    "help_text": "Lower values (e.g., 0.01 or 1e-5) increase stringency, reducing false positives but possibly missing weaker peaks. The default of 0.05 is a balanced threshold. Example: `--peak_quality 1e-5`.",
                    "fa_icon": "fas fa-signal",
                    "default": 0.05},
                "genome_size": {
                    "type": "string",
                    "title": "Genome Size (MACS3)",
                    "description": "Specifies the genome size shortcut for MACS3 peak calling, corresponding to the total mappable genome length.",
                    "help_text": "Use MACS3-supported short codes like `hs` (human), `mm` (mouse), or provide an exact value (e.g., 2.7e9). Must match your reference genome build. Example: `--genome_size mm`.",
                    "fa_icon": "fas fa-globe",
                    "default": "hs"},
                "macs3_callpeak_args": {
                    "type": "string",
                    "title": "MACS3 Additional Arguments",
                    "description": "Optional custom arguments passed directly to the MACS3 `callpeak` command for advanced configuration.",
                    "help_text": "Use this to customize peak calling — for example, enabling model-free mode, adjusting shift/extension sizes, or specifying control input. Example: `--macs3_callpeak_args \"-q 0.01 --nomodel --shift -75 --extsize 150\"`.",
                    "fa_icon": "fas fa-chart-area",
                    "default": null},
                "maps_args": {
                    "type": "string",
                    "title": "MAPS Loop Calling Arguments",
                    "description": "Additional command-line flags for the MAPS (Model-based Analysis of PLAC-seq/HiChIP) tool, used for chromatin loop detection.",
                    "help_text": "Adjust MAPS behavior such as bin size, distance range, or resolution. Example: `--maps_args \"--bin-size 5000 --cis-only\"`. Leave empty (`null`) to use default MAPS settings.",
                    "fa_icon": "fas fa-project-diagram",
                    "default": null},
                "skip_maps": {
                    "type": "boolean",
                    "title": "Skip MAPS Module",
                    "description": "Determines whether to skip the MAPS loop calling module during the pipeline execution.",
                    "help_text": "Set this to `true` to disable loop calling (useful for QC or peak-only runs). Set to `false` to perform full MAPS-based loop analysis. Example: `--skip_maps false`.",
                    "fa_icon": "fas fa-toggle-off",
                    "default": true}
            }
        },
        "matrices": {
            "title": "Contact Matrices & Binning",
            "type": "object",
            "fa_icon": "fas fa-th",
            "description": "Cooler matrix generation and resolution options",
            "properties": {
                "cool_bin": {
                    "type": "string",
                    "description": "cool_bin parameter",
                    "fa_icon": "far fa-file-code",
                    "default": 1000
                },
                "cooler_cload_args": {
                    "type": "string",
                    "description": "cooler_cload_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "pairs --zero-based  -c1 2 -p1 3 -c2 4 -p2 5"
                },
                "cooler_zoomify_res": {
                    "type": "string",
                    "description": "cooler_zoomify_res parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "1000N"
                },
                "cooler_zoomify_args": {
                    "type": "string",
                    "description": "cooler_zoomify_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": ""
                },
                "insulation_resultions": {
                    "type": "string",
                    "description": "insulation_resultions parameter",
                    "fa_icon": "far fa-file-code",
                    "default": {
                        "1000N": "1000 2000 5000 10000 20000 50000 100000 200000 500000"
                    }
                },
                "cooltools_eigscis_args": {
                    "type": "string",
                    "description": "cooltools_eigscis_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "--n-eigs 1"
                },
                "cooler_eigscis_resultion": {
                    "type": "string",
                    "description": "cooler_eigscis_resultion parameter",
                    "fa_icon": "far fa-file-code",
                    "default": 100000
                },
                "calder_bin": {
                    "type": "string",
                    "description": "calder_bin parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "10E3"
                },
                "gstripe_args": {
                    "type": "string",
                    "description": "gstripe_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "--fix_bin_start"
                }
            }
        },
        "visualization": {
            "title": "Visualization & QC",
            "type": "object",
            "fa_icon": "fas fa-chart-bar",
            "description": "Plotting and QC options (deepTools, Juicer, etc.)",
            "properties": {
                "plot_method": {
                    "type": "string",
                    "description": "plot_method parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "spearman"
                },
                "plot_type": {
                    "type": "string",
                    "description": "plot_type parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "heatmap"
                },
                "fastqc_args": {
                    "type": "string",
                    "description": "fastqc_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "--quiet"
                },
                "deeptools_plotcoverage_args": {
                    "type": "string",
                    "description": "deeptools_plotcoverage_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "--skipZeros"
                },
                "deeptools_plotcorrelation_args": {
                    "type": "string",
                    "description": "deeptools_plotcorrelation_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "--skipZeros --plotTitle \"Spearman Correlation of Read Counts\"  --colorMap RdYlBu --plotNumbers "
                },
                "juicertools_args": {
                    "type": "string",
                    "description": "juicertools_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                },
                "pairtools_parse2_args": {
                    "type": "string",
                    "description": "pairtools_parse2_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                }
            }
        },
        "multimm": {
            "title": "3D Genome Modelling (MultiMM)",
            "type": "object",
            "fa_icon": "fas fa-cube",
            "description": "Parameters for 3D genome modeling using MultiMM",
            "properties": {
                "multimm_platform": {
                    "type": "string",
                    "description": "multimm_platform parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "CPU"
                },
                "multimm_modelling_level": {
                    "type": "string",
                    "description": "multimm_modelling_level parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "chrom"
                },
                "multimm_gene_name": {
                    "type": "string",
                    "description": "multimm_gene_name parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                },
                "multimm_chrom": {
                    "type": "string",
                    "description": "multimm_chrom parameter",
                    "fa_icon": "far fa-file-code",
                    "default": "chr21"
                },
                "multimm_loc_start": {
                    "type": "string",
                    "description": "multimm_loc_start parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                },
                "multimm_loc_end": {
                    "type": "string",
                    "description": "multimm_loc_end parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                },
                "multimm_args": {
                    "type": "string",
                    "description": "multimm_args parameter",
                    "fa_icon": "far fa-file-code",
                    "default": null
                }
            }
        }
    },
    "properties": {}
}
